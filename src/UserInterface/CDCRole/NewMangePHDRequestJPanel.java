/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.CDCRole;

import Business.EcoSystem;
import Business.Enterprise.CDCEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PHDEnterprise;
import Business.Network.Network;
import Business.Order;
import Business.OrderItem;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ProviderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import static java.lang.Math.round;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sanil
 */
public class NewMangePHDRequestJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    EcoSystem business;
    UserAccount userAccount;
    Network n;

    /**
     * Creates new form NewMangePHDRequestJPanel
     */
    public NewMangePHDRequestJPanel(JPanel userProcessContainer,EcoSystem business,UserAccount userAccount,Network n) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.business=business;
        this.userAccount=userAccount;
        this.n=n;
        populateTable();
    }
     private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) requestjTable1.getModel();
Enterprise ent1 = null;
        model.setRowCount(0);
        for (Network n : business.getNetworkList()){
            for (Enterprise enterprise : n.getEnterpriseDirectory().getEnterpriseList()){
               
                  if (enterprise instanceof PHDEnterprise){
                      ent1 = enterprise;
                    for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {
                   
            Object[] row = new Object[4];
            row[0] = request;
           // row[] = request.getSender().getEmployee().getName();
            row[1] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[2]=  ((ProviderWorkRequest)request).getOrder();
            row[3] = request.getStatus();

            model.addRow(row);
            }  
                  
             
        }
                  if (ent1 != null) {
                            break;
                        }
            }
            if (ent1 != null) {
                            break;
                        }
        }
    }
     
     
     private int calculateOrderQuantity(Order o)
     {
     
                        for (OrderItem oi:o.getOrderItemList())
                        {
                            
                        int sum = 0;
                            int quantity = oi.getQuantity();
                            sum = sum +quantity;
                                    
                            return sum;
                        }
                  
                    
     return 0;
     }
     
     
    private boolean approve(int population,int quantity)
    {
        
        int allowedVaccine = (int)(0.22 * population);
       
    if(population > 0 && population <= 100000)
    {
    if(quantity < allowedVaccine)
    {
    return true;
    }
   
    }
        return false;

    }

     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestjTable1 = new javax.swing.JTable();
        refreshjButton1 = new javax.swing.JButton();
        assignTomejButton1 = new javax.swing.JButton();
        processjButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(java.awt.Color.white);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Order", "Status"
            }
        ));
        jScrollPane1.setViewportView(requestjTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, 120));

        refreshjButton1.setText("Refresh");
        refreshjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButton1ActionPerformed(evt);
            }
        });
        add(refreshjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 11, -1, -1));

        assignTomejButton1.setText("Assignto me");
        assignTomejButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignTomejButton1ActionPerformed(evt);
            }
        });
        add(assignTomejButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 150, -1));

        processjButton2.setText("Process");
        processjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processjButton2ActionPerformed(evt);
            }
        });
        add(processjButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, 150, -1));

        jButton1.setText("Forwd to Distributor");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 300, 150, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void refreshjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButton1ActionPerformed
        populateTable();        // TODO add your handling code here:
    }//GEN-LAST:event_refreshjButton1ActionPerformed

    private void assignTomejButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignTomejButton1ActionPerformed
        int selectedRow = requestjTable1.getSelectedRow();

        if (selectedRow < 0) {
             {
                 JOptionPane.showMessageDialog(null,"select a row");
            }
            return;
        }
        // UserAccount userAccount = null;
        WorkRequest request = (WorkRequest) requestjTable1.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateTable(); 
        {
             JOptionPane.showMessageDialog(null,"Succesfully assigned");
            
}// TODO add your handling code here:
    }//GEN-LAST:event_assignTomejButton1ActionPerformed

    private void processjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processjButton2ActionPerformed
        int selectedRow = requestjTable1.getSelectedRow();

        if (selectedRow < 0) {
            {
                 JOptionPane.showMessageDialog(null,"select a row");
            }
            return;
        }

        ProviderWorkRequest request2 = (ProviderWorkRequest) requestjTable1.getValueAt(selectedRow, 0);
       // request2.setStatus("Processing");
        request2.getOrder();
        int population = request2.getPopulation();
    boolean isApprove =  approve(population, calculateOrderQuantity(request2.getOrder()));
        System.out.println(population);
        if(approve(population, calculateOrderQuantity(request2.getOrder())) == true)
            
        {
            JOptionPane.showMessageDialog(null,"Approved");
            request2.setStatus("Approved");
            populateTable();
        }
        else
        {
             JOptionPane.showMessageDialog(null,"Rejected");
            request2.setStatus("Rejected");
            populateTable();
        }

//        NewProcessCDCWorkRequestJPanel processPHDWorkRequestJPanel = new NewProcessCDCWorkRequestJPanel(userProcessContainer, request2);
//        userProcessContainer.add("processWorkRequestJPanel", processPHDWorkRequestJPanel);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);

        // TODO add your handling code here:
    }//GEN-LAST:event_processjButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  int selectedRow  = requestjTable1.getSelectedRow();
        if(selectedRow < 0){
            {
                 JOptionPane.showMessageDialog(null,"select a row");
            }
            return;
            
        }
        else{
        
        ProviderWorkRequest request2  = (ProviderWorkRequest)requestjTable1.getValueAt(selectedRow, 0);
        if(request2.getStatus().equals("Rejected"))
                {
                JOptionPane.showMessageDialog(null,"Order is Rejected");
                }
       
        else{ 
            Enterprise ent = null;
        
        for (Enterprise enterprise : n.getEnterpriseDirectory().getEnterpriseList()){
            if (enterprise instanceof CDCEnterprise){
                ent = enterprise;
                break;
            }
            }
        
        
        
        if (ent!=null){
            ent.getWorkQueue().getWorkRequestList().add(request2);
            //userAccount.getWorkQueue().getWorkRequestList();
        
        }
        }}
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignTomejButton1;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processjButton2;
    private javax.swing.JButton refreshjButton1;
    private javax.swing.JTable requestjTable1;
    // End of variables declaration//GEN-END:variables
}
