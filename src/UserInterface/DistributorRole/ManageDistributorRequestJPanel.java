/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.DistributorRole;

import Business.EcoSystem;
import Business.Enterprise.CDCEnterprise;
import Business.Enterprise.DistributorEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PHDEnterprise;
import Business.Network.Network;
import Business.Order;
import Business.OrderItem;
import Business.ProductVaccine;
import Business.UserAccount.UserAccount;

import Business.WorkQueue.ProviderWorkRequest;
import Business.WorkQueue.WorkRequest;
import UserInterface.PHDRole.ProcessRequestJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sanil
 */
public class ManageDistributorRequestJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    EcoSystem business;
    Network n;
    UserAccount userAccount;

    /**
     * Creates new form ManageDistributorRequestJPanel
     */
    public ManageDistributorRequestJPanel(JPanel userProcessContainer,EcoSystem business,Network n,UserAccount userAccount) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.business=business;
        this.n=n;
        this.userAccount=userAccount;
        populateTable();
    }
     private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) requestjTable1.getModel();

        model.setRowCount(0);
        for (Network n : business.getNetworkList()){
            for (Enterprise enterprise : n.getEnterpriseDirectory().getEnterpriseList()){
               
                  if (enterprise instanceof CDCEnterprise){
                    for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {
                   
            Object[] row = new Object[4];
            row[0] = request;
           // row[] = request.getSender().getEmployee().getName();
            row[1] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[2]=  ((ProviderWorkRequest)request).getOrder();
            row[3] = request.getStatus();
                        
            model.addRow(row);
            }  
                  
             
        }
            }
        }
    }
    
     private int calculatePrice(Order o)
     {
         System.out.println("test");
         int totalsum = 0;
          for (OrderItem oi:o.getOrderItemList()){
         //ProductVaccine productVaccine = oi.getProductvaccine();                      
            totalsum += oi.getQuantity() * oi.getSalesPrice();
            System.out.println(totalsum);
        }
        return totalsum;
     }
     
     
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestjTable1 = new javax.swing.JTable();
        refreshjButton1 = new javax.swing.JButton();
        assignTomejButton1 = new javax.swing.JButton();
        processjButton2 = new javax.swing.JButton();
        billtoCDCjButton1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        forwdtocentreDistributionjbutton = new javax.swing.JButton();

        setBackground(java.awt.Color.white);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Order", "Status"
            }
        ));
        jScrollPane1.setViewportView(requestjTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(144, 52, -1, 120));

        refreshjButton1.setText("Refresh");
        refreshjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButton1ActionPerformed(evt);
            }
        });
        add(refreshjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(502, 11, -1, -1));

        assignTomejButton1.setText("Assignto me");
        assignTomejButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignTomejButton1ActionPerformed(evt);
            }
        });
        add(assignTomejButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(144, 212, -1, -1));

        processjButton2.setText("Process");
        processjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processjButton2ActionPerformed(evt);
            }
        });
        add(processjButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(495, 212, 101, -1));

        billtoCDCjButton1.setText("Send Bill to CDC");
        billtoCDCjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billtoCDCjButton1ActionPerformed(evt);
            }
        });
        add(billtoCDCjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(144, 306, -1, -1));

        jButton1.setText("Get Inventory");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(495, 306, -1, -1));

        forwdtocentreDistributionjbutton.setText("Forward Order To CentreDistribution");
        forwdtocentreDistributionjbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwdtocentreDistributionjbuttonActionPerformed(evt);
            }
        });
        add(forwdtocentreDistributionjbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 355, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void refreshjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButton1ActionPerformed
        populateTable();        // TODO add your handling code here:
    }//GEN-LAST:event_refreshjButton1ActionPerformed

    private void assignTomejButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignTomejButton1ActionPerformed
        int selectedRow = requestjTable1.getSelectedRow();

        if (selectedRow < 0) {
            {
                 JOptionPane.showMessageDialog(null,"select a row");
            }
            return;
            
        }
        // UserAccount userAccount = null;
        WorkRequest request = (WorkRequest) requestjTable1.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateTable();    // TODO add your handling code here:
    }//GEN-LAST:event_assignTomejButton1ActionPerformed

    private void processjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processjButton2ActionPerformed
   int selectedRow = requestjTable1.getSelectedRow();
        
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select a row");
            return;
        }
        else{
        ProviderWorkRequest request1 = (ProviderWorkRequest)requestjTable1.getValueAt(selectedRow, 0);
        if(request1.getStatus().equals("Pending"))
        {
     request1.setStatus("Request Completed");
        request1.setStatus("Completed");
         request1.setStatus("Processing");
         
     
        
        
       DistriBtrProcessWorkRequestJPanel processWorkRequestJPanel = new DistriBtrProcessWorkRequestJPanel(userProcessContainer, request1);
       userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer); 
     
        }
        
        else{
                JOptionPane.showMessageDialog(null, "First assign the request");
                }
        }
        
        
        
        
        
        
        
        
//        int selectedRow = requestjTable1.getSelectedRow();
//        
//        if (selectedRow < 0){
//            return;
//        }
//        
//        ProviderWorkRequest request1 = (ProviderWorkRequest)requestjTable1.getValueAt(selectedRow, 0);
//     
//        request1.setStatus("Processing");
//        
//        DistriBtrProcessWorkRequestJPanel processWorkRequestJPanel = new DistriBtrProcessWorkRequestJPanel(userProcessContainer, request1);
//        userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);        
    }//GEN-LAST:event_processjButton2ActionPerformed

    private void billtoCDCjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billtoCDCjButton1ActionPerformed
 //ProviderWorkRequest request2 = new ProviderWorkRequest();
 
        int selectedRow  = requestjTable1.getSelectedRow();
        if(selectedRow < 0){
            return;
        }
        else{
        
        ProviderWorkRequest request2  = (ProviderWorkRequest)requestjTable1.getValueAt(selectedRow, 0);
       
        if(request2.getStatus().equals("Pending"))
                {
                JOptionPane.showMessageDialog(null,"Order is Pending");
                }
       
        else if (request2.getStatus().equals("Completed")){ 
            Enterprise ent = null;
        
        for (Enterprise enterprise : n.getEnterpriseDirectory().getEnterpriseList()){
            if (enterprise instanceof DistributorEnterprise){
                ent = enterprise;
                break;
            }
            }
        
        
        
        if (ent!=null){
            System.out.println(request2.getOrder() + "order check");
            int price = calculatePrice(request2.getOrder());
             
        request2.setTotalPrice(price);
         System.out.println(price +"dddd");
            ent.getWorkQueue().getWorkRequestList().add(request2);
            //userAccount.getWorkQueue().getWorkRequestList();
            //System.out.println(price +"sss");
        
        }
        }
        else{
                JOptionPane.showMessageDialog(null,"Order is Pending");
                }} 
        
        
        
      //  int totalPrice=request1.getTotalPrice();
       
        
                // TODO add your handling code here:
    }//GEN-LAST:event_billtoCDCjButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void forwdtocentreDistributionjbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwdtocentreDistributionjbuttonActionPerformed
  int selectedRow  = requestjTable1.getSelectedRow();
        if(selectedRow < 0){
            return;
        }
        else{
             ProviderWorkRequest request2  = (ProviderWorkRequest)requestjTable1.getValueAt(selectedRow, 0);
       
        if(request2.getStatus().equals("Pending"))
                {
                JOptionPane.showMessageDialog(null,"Order is Pending");
                }
       
        else if (request2.getStatus().equals("Completed")){ 
            Enterprise ent = null;
        
//        ProviderWorkRequest request2  = (ProviderWorkRequest)requestjTable1.getValueAt(selectedRow, 0);
//        if(request2.getStatus().equals("Rejected"))
//                {
//                JOptionPane.showMessageDialog(null,"Order is Rejected");
//                }
//       
//        else{ 
//            Enterprise ent = null;
//        
        for (Enterprise enterprise : n.getEnterpriseDirectory().getEnterpriseList()){
            if (enterprise instanceof DistributorEnterprise){
                ent = enterprise;
                break;
            }
            }
        
        
        
        if (ent!=null){
            ent.getWorkQueue().getWorkRequestList().add(request2);
            //userAccount.getWorkQueue().getWorkRequestList();
        
        }
        }}      // TODO add your handling code here:
    }//GEN-LAST:event_forwdtocentreDistributionjbuttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignTomejButton1;
    private javax.swing.JButton billtoCDCjButton1;
    private javax.swing.JButton forwdtocentreDistributionjbutton;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processjButton2;
    private javax.swing.JButton refreshjButton1;
    private javax.swing.JTable requestjTable1;
    // End of variables declaration//GEN-END:variables
}
